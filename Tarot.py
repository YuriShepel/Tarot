# -*- coding: utf-8 -*-
from imports import *


if __name__ == '__main__':
    import sys
    app = QApplication(sys.argv)
    window = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(window)
    window.show()

# Открываем Карту дня
def openDayCard():
    import random
    
    card_dict = {'Туз мечей': 'Решение задачи, над которой долгое время приходилось ломать голову, будет прямо перед носом. Будьте сегодня особенно внимательны, чтобы не упустить эту возможность, каждый день такие шансы на дороге не валяются. \
                  Однако не стоит излишне придираться к разным мелочам. Просто вникните в суть дела и примите верное решение. ',
                 'Король мечей': 'Судьба преподносит гадающему человеку экзамен, где ему необходимо показать свои знания, сообразительность и способность пользоваться собственным опытом. Гадающий, должен хорошо подготовиться к этому испытанию, и для этого у него должны быть убедительные проекты и аргументы, ну и было бы не лишним воспользоваться своим обаянием и остроумием. Человек обязательно покажет окружающим свой ясный ум, особенно в той ситуации, которая требует решительности и действий. Но если вдруг в этот день появится какая-то проблема, которая покажется не решаемой в одиночку, то можно воспользоваться помощью знающего специалиста. ',
                 'Королева мечей': 'Судьба человеку подскажет сделать правильный шаг. Если совсем недавно он еще от кого-то был зависим, то теперь настал тот день, когда все значительно меняется в лучшую сторону. Теперь ничего не нужно стесняться, нужно вести себя свободно и непринужденно при любых обстоятельствах.Главное не перейти границу, чтобы стремление к самостоятельности не переросло в войну против общества. Стоит ожидать встречу с умным человеком женского рода. Стоит прислушаться к тому, что она скажет. Эта женщина в судьбе человека будет иметь немаловажное значение. ',
                 'Рыцарь мечей': 'Карта дня свидетельствует о конфликте, именно поэтому необходимо ясно мыслить и трезво реагировать на происходящее, и даже в какой-то степени хладнокровно. Дискутировать, желательно, без эмоций. Благодаря этому даже в сложной ситуации можно надеяться на победу. Но если окажется «ничья», это также пойдет на пользу, а не во вред. В этот день человек будет неукротимым, решительным, любознательным. Его тянет на авантюры и интересные ситуации, где он проявит свою индивидуальность в полном объеме. Он может быть вспыльчивым, импульсивным, готовым жертвовать собственными планами ради недолгих минут радости. Он с легкостью портит жизнь и себе, и окружающим людям, и вечно куда-то торопится. ',
                 'Паж мечей': 'Карта дня говорит о том, что человек услышит критику в свой адрес, его предложения, скорее всего, будут отвергнуты. Нужно просто подготовить себя к этому изначально, чтобы потом не расстраиваться и не вставать в контратаку. Между прочим, критика может оказаться очень полезной, так как несет в себе что-то ценное. Если человек прислушается к сказанным словам, то в его жизни многое прояснится. В жизни человека обязательно наступит тот момент, когда он сможет раскрыть свой потенциал, ведь у него все для этого есть: общительность, смекалка, сообразительность, контактность. ',
                 'Десятка мечей': 'Сегодня можно подвести итоги. И даже если речь идет о чем-то или ком-то близком и дорогом, нужно быть готовым проститься. Произойдет завершение неприятностей и огорчений, которым человек будет искренне радоваться. И главное, ничего не разрушить, а то придется об этом потом долго сожалеть. Откройте себя новым делам и свершениям, переживите страшную потерю так, чтобы не сломаться духом. Если человек будет настроен позитивно, то карта дня подарит ему только положительное значение. Никаких опасностей и трудностей не намечается, но только в том случае, если человек избавит себя от негатива, нежелательного общения. ',
                 'Девятка мечей': 'Сегодня карта характеризует события, как кошмарный сон. Но так они представлены перед человеком, которого мучают угрызения совести. На самом деле, ничего отрицательного этот день не несет. Даже если у человека будут трудности, то это все временные обстоятельства. Нужно просто собраться с духом и принять ситуацию как есть. Если человек чувствует себя в какой-либо ситуации виноватым, то ему нужно раскаяться в содеянном. Под влиянием этого Аркана человек становится слишком чувствительным, и легко может поддастся стрессу, впасть в депрессию. ',
                 'Восьмёрка мечей': 'Сегодня судьба столкнет человека с запретом. Он будет чувствовать себя зажатым и скованным, могут произойти и совершенно другие ограничения. Необходимо взять себя в руки, сделать шаг, и попробовать научиться преодолеть этот этап. Если покажется, что это скованное состояние так никуда и не ушло, то придется найти другой путь. Только не превращайте свои страхи в бесконечную череду проблем. Нужно просто собраться с духом. Возможно, в этот день человек будет вести себя закомплексованным, ему свойственно быть скромным и стеснительным. Но если он будет бороться изо всех сил, преодолевая свои страхи, то ему намного проще будет жить в этом мире среди людей.',
                 'Семёрка мечей': 'Сегодня надо быть особенно осторожным, так как не исключен обман. Если предстоит подписывать какие-то документы, особенно внимательно стоит прочесть все пункты, чтобы потом не страдать от собственной неграмотности. ',
                 'Шестёрка мечей': 'Сегодня – интересный день, который не предвещает ничего плохого. Карта говорит о том, что необходимо готовиться к переменам, и чем быстрее это произойдет, тем легче будет потом для гадающего. Главное – управлять своей судьбой самому, и не зависеть от каких-либо обстоятельств. ',
                 'Пятёрка мечей': 'Сегодня гадающего ждут серьёзные неприятности. Надо быть осторожным, чтобы не стать жертвой мошенников и воров. На работе и в личной жизни нужно подготовиться к возможным конфликтам. В этот день никаких серьёзных дел лучше не делать. ',
                 'Четвёрка мечей': 'Сегодня наступил тот день, когда нужно принимать решение. Как-бы не хотелось отложить этот момент, дальше тянуть некуда. Решение может касаться одной из сфер жизни. Сделав этот важный шаг, человеку сразу станет легче. Карта означает, что человек очень сильно подвержен чужому влиянию. Надо учиться жить своим умом, но при этом мудро пользоваться советами окружающих. ',
                 'Тройка мечей': 'Сегодня - несчастливый день. На работе гадающего человека ждёт неприятное известие. Как вариант, надо будет принять верное решение, которое потребует серьёзных эмоциональных усилий. Тройка мечей советует не впадать в уныние, а постараться выдержать удары судьбы, которые ждут в этот день. Спину сгибать перед неприятностями не стоит. Надо стойко перенести негативные события, чтобы появилась надежда на начало светлой полосы в жизни. ',
                 'Двойка мечей': 'Сомнения и тревоги будут одолевать человека сегодня. Кажется, что интуиция молчит. Если в этот день надо будет принимать очень важное решение, лучше этого не делать. Наступит завтра - тогда и видно будет. Просто день для этого - не совсем подходящий. ',
                 'Туз кубков': 'Туз Кубков в такой ситуации – предзнаменование исполнения заветного желания. Все, что загадывается в течение этого дня, обязательно сбудется, воспользуйтесь таким шансом. Карта указывает на перемены в амурных делах. Интуиция подсказывает гадающему, что произойдет что-то многообещающее, это связано с человеком из окружения. Удачным день будет и для того, кто, наконец, захочет с кем-то примириться, решить старую, но не менее вескую, проблему. Также аркан предостерегает от пустых мечтаний, которые не сулят ничего благоприятного. Ставьте сегодня перед собой реальные цели, чтобы добиться их.',
                 'Король кубков': 'Карта выпадает в том случае, когда нужно немного сдерживать свои чувства, принимая решения, в первую очередь, согласовывая их с разумом, а не сердцем. Однако не скупитесь на эмоции с любимым человеком или с тем, кто жаждет вашей заботы и внимания. Поделитесь тем, что вас беспокоит, за что болит душа. В ответ получите только приятные слова поддержки, мудрые и действенные советы. В этот день может повстречаться гадающему человеку красивый мужчина, который сыграет не последнюю роль в недалеком будущем. ',
                 'Королева кубков': 'В этот день гадающий будет особо чутко чувствовать эмоциональное настроение окружающих людей. Есть вероятность, что из-за чужого поведения он может пострадать. Будьте внимательны, судьба посылает повсюду знаки. Оставайтесь верными самому себе, своим принципам, чувствам. Однако не принимайте то, чем страстно желаете обладать, за чистую монету, это происходит не в реальности. Возможно знакомство с женщиной, с которой сразу появятся доверительные отношения. Она станет мудрым советчиком, добрым и интересным собеседником. ',
                 'Рыцарь кубков': 'День будет довольно светлым и наполненным событиями. Настроение и самочувствие прекрасное, а энергия бьет ключом. Используйте день по назначению, решите дела, на которые давно не хватало времени и сил. Этот день будет благополучным для разрешения конфликтов в любовных отношениях. Фантазия будет работать безупречно, можно поговорить по душам, обсудив все наболевшее. Относитесь к окружающим дружелюбно, с открытой душой, они ответят тем же. Однако, нет потребности оказывать кому-то знаки внимания, помогать (совершенно бескорыстно).',
                 'Паж кубков': 'Судьба на вашей стороне. Перед человеком открываются новые возможности и эмоциональная подпитка. Сегодня тот самый день, когда человек может принимать подарки судьбы, при этом ничего не отдавая взамен. Это может даже проявляться в обычных мелочах (комплименты, объяснения в любви, почетный компромисс в непростых обстоятельствах). Его начинания дадут плоды, а дела, которыми занимался ранее завершатся успехом. Кстати, можно задуматься о карьерном росте, есть перспективы. ',
                 'Десятка кубков': 'Сегодня обязательно появится повод для радости. Вы успешно завершите дело на работе, вследствие чего ждет повышение. Возлюбленный наконец-то сделает предложение руки и сердца, которого вы так долго ждали. Если гадающий одинок, велика вероятность встречи с кем-то, кто в будущем сыграет не последнюю роль, возможно создание серьезных отношений. ',
                 'Девятка кубков': 'Заканчивайте напряженную работу, наступила пора праздника и развлечений. Однако не увлекайтесь банкетами: это приводит к обжорству и злоупотреблению спиртными напитками, что гарантирует проблемы с пищеварительной системой. Если серьезных причин для торжества нет, просто побалуйте себя лишним выходным, полентяйничайте, займитесь тем, что давно хотели делать. Проведите время с любимым человеком, семьей, друзьями. Если сегодня разделите с кем-то свое прекрасное настроение, это обязательно аукнется в будущем, когда в нужный момент потребуется помощь и поддержка. ',
                 'Восьмёрка кубков': 'Откажитесь от привычного пути, идите непротоптанной тропинкой, она обязательно выведет вас к чему-то новому. Но не стоит вступать в путь, если на сердце тяжело, нет абсолютно никакого желания это делать. В раскладе карта выпадает как знак расставания с чем-то хорошим. Не стоит огорчаться. Отпустите это от себя, начните искать. Поверьте, другие события и люди смогут удивить и обрадовать вас не меньше. В итоге вы поймете, почему расставание должно было случиться. Все перемены ведут к лучшей жизни. ',
                 'Семёрка кубков': 'Семерка Кубков советует сегодня быть в ясном уме, чтобы обращать внимание на все мелочи. Не поддавайтесь обману, особенно не лгите самому себе. Не принимайте никаких предложений в этот день, даже если кажется, что они принесут успех, это не так. Судьба проверяет вас. Не употребляйте алкоголь, который нарушит трезвость ума. В таком состоянии вы особенно уязвимы. Выбирайте по какой дорожке идти к достижению целей. Не метайтесь из стороны в сторону, это сильно сбивает с конечного курса, а успех не свалится на голову просто так. ',
                 'Шестёрка кубков': 'День подарит человеку воспоминания. Он сможет разобраться в себе: чего он хотел, о чем мечтал в прошлом, что сбылось и не сбылось из этого до сегодняшнего дня. Благодаря такому вот анализу, могут осуществиться многие забытые мечты. Прошлое реально может дать подсказку для настоящего и будущего человека. Может произойти встреча с тем, кого давно не видели, а может быть найдется важная вещь, которая когда-то была потерянной. У человека появляется шанс вновь стать счастливым, радостным, влюбленным. А разве можно себе отказывать в надежде – быть счастливым, ведь ради этого мы и живем. ',
                 'Пятёрка кубков': 'Случатся неизбежные огорчения. Даже если кому-то казалось, что успех на его стороне, а в делах все получается, то этот день – разочарует. Если это как-то связано с мелкими недочетами, то стоит отнестись к этому с юмором. Но если приходится грустить по поводу серьезного дела, то нужно все принять достойно, ничего не скрывая от других людей. Чем искреннее и открыт будет человек, тем быстрее все неприятности обойдут его стороной, а в жизни снова будет место радостям и приятным впечатлениям. Только с позитивным настроем можно надеяться на положительное стечение обстоятельств. ',
                 'Четвёрка кубков': 'Сегодня любая мелочь способна подпортить настроение. Не исключены проблемы со здоровьем. Если появилась причина, которая вызывает у вас такие чувства как грусть и тоска, не увлекайтесь этими эмоциями, продолжайте быть открытыми к миру, который обязательно поможет вам реабилитироваться. Кроме того, вокруг много возможностей, которые не стоит упускать по собственной глупости. Душа и тело требует перемен, какой-то встряски. Скука и рутина вызывают апатию или даже полное отвращение ко всему происходящему, эти чувства приводят к неудовлетворенности своей жизнью. ',
                 'Тройка кубков': 'Сегодняшний день обязательно принесет с собой радостное событие или благую весть. Отметьте это, поделитесь своим хорошим настроением с близким окружением. Пригласите родных и друзей к себе на уютный вкусный ужин, распейте прекрасную бутылку вина, оставленную когда-то про запас. Не жалейте, этот момент уже наступил, а такой отличный повод бывает далеко не каждый день. Благодарите судьбу за то, что она преподносит вам самые сладкие плоды. Примиритесь со старыми знакомыми, с которыми были склоки и неудачи в отношениях. Этот день как никакой другой будет особенно благоприятным для этого. Карта может указывать на расширение круга общения, возможно, сегодня появится новое знакомство. Не уходите от него, оно может принести с собой полезные связи, которые помогут улучшить результаты в любой сфере жизни. ',
                 'Двойка кубков': 'День запомнится сердечными делами, где будут присутствовать глубокая симпатия, любовь, душевный контакт или примирение. Если есть любимый человек, который уже супруг (супруга), то будет период, когда можно вновь пережить те первые отношения и влюбленность, которые не увяли до сих пор, а даже укрепились. Под воздействием карты у человека проявится способность к дипломатии и прекрасные коммуникабельные способности. Человека ожидает достаточно слаженный, плодотворный совместный труд, где будут проявлены коллективные усилия. Именно в команде он сможет достичь невероятных успехов. ',
                 'Туз пентаклей': 'Сегодня удача будет преследовать по пятам. Будьте предельно внимательны, не упустите свои шансы, они предостерегают вас в разных местах и в самое неожиданное время. Вложитесь в те планы, которые являются долгосрочными и реальными, особенно если это касается карьеры и заработка. Если все планы только краткосрочные, то сегодняшний день станет отличным стартом для далеко идущих задач. ',
                 'Король пентаклей': 'Сегодняшний день словно создан для того, чтобы подводить итоги своей работы. Если результаты хорошие, порадуйтесь за себя. Может возникнуть потребность взяться за новое дело, не отказывайте себе в этом желании. Сохраняйте нажитое, ведь это было достигнуто непосильным трудом в течение длительного времени, а потратить все можно за несколько минут. ',
                 'Королева пентаклей': 'Нельзя позволять другим людям манипулировать собой. Сейчас все зависит от вас, просто последовательно выполняйте свою работу и помните о долгосрочных проектах. Не исключена встреча с женщиной, которая обладает сильными материнскими чувствами и добротой. Именно эта женщина может сыграть важную роль в судьбе гадающего человека. И стоит прислушаться к тому, что она будет говорить. ',
                 'Рыцарь пентаклей': 'Не позволяйте обвести себя вокруг пальца. Человек под воздействием аркана будет способен говорить на серьезные темы, в дело он пустит лишь проверенные способы, и не пойдет на спекуляции. Именно в этот день есть отличный шанс принять важное и ответственное решение. Даже проблема, которая казалась трудной и невыполнимой, разрешится сегодня самым лучшим образом. Но, а если нет никаких проблем и не нужно решать задачи, то самое время для того, чтобы расслабиться, выделить себе время на то, что потом вспомните с удовольствием. Можно заняться каким-нибудь хобби, которое оставит массу приятных воспоминаний. ',
                 'Паж пентаклей': 'Сегодня будет шанс получить то, о чем даже и не мечтали. Не стоит отказываться от выгодных сделок, помогайте людям, оказывайте им практическую помощь и материальную поддержку. В личной жизни ожидаются перемены, которые будут связаны исключительно с приятными событиями и ощущениями. Человек получит полезный совет от партнера, который подвигнет его на создание прочного и долговременного союза. В этот день будут успешно разрешаться проблемы и споры, которые копились годами. ',
                 'Десятка пентаклей': 'Сегодняшний день просто создан для подведения итогов. Приготовьтесь отпустить от себя что-то важное, чтобы получить нечто ценное. Все неприятности и горести могут закончиться уже сейчас. ',
                 'Девятка пентаклей': 'Карта говорит о том, что гадающего ждут приятные известия, которые оставят положительный отпечаток в судьбе. Нужно принимать дары судьбы и быть благодарным за это. Этот день полон приятных событий, поэтому нужно быть решительней в новых делах, и тогда фортуна обязательно будет на вашей стороне. ',
                 'Восьмёрка пентаклей': 'Сегодня предстоит день новых возможностей и желаний. Стоит попробовать взяться за новое дело, пойти учиться или развивать навыки мастерства. Успех преследует вас по пятам, поэтому, за что бы вы, сегодня не взялись, все разрешится благополучно. Главным условием является не переоценивать собственные шансы и силы. Не берите на себя много забот, если понимаете, что не справитесь за отведенное время с чем-то. Набирайтесь опыта, усердно работайте над каждым делом, и тогда все получится, ведь у вас отличные перспективы в будущем. ',
                 'Семёрка пентаклей': 'Сегодняшний день явно не для спешки, стоит быть более терпеливыми, неспешными. Принимайте во внимание каждую деталь, взвешивайте в голове каждое решение, прежде чем утвердить его. Любая оплошность сегодня спровоцирует появление сложных ситуаций, решение которых потребует в будущем больших материальных и энергетических затрат. Нет смысла нарушать планы, которые долго и мучительно претворяются в жизнь. Если настроя на терпение нет, просто возьмите передышку, отдохните, проведите время с пользой, уделите внимание самым близким, удивите приятным сюрпризом любимого человека. Добро обязательно будет вам возвращено. ',
                 'Шестёрка пентаклей': 'Сегодня будет день помощи другим людям. Не скупитесь на благое дело, будьте щедры и позже это вернется вам в большем размере, когда трудности в жизни возникнут и у вас. Если нет возможности дать взаймы, помогите физически, как минимум, выслушайте человека со всем вниманием, дайте ценный и мудрый совет. Если награда предназначается для вас, не отказывайтесь от нее, это оценка ваших усилий. Работайте над собственным эгоизмом, тогда день ничего не сможет омрачить. ',
                 'Пятёрка пентаклей': 'Не стоит строить на такой день далеко идущие планы – все равно дела пойдут не так, как надо. Возможно, стоит подумать о том, чтобы поменять жизненные приоритеты. Возможно, впереди ожидается неблагоприятная полоса в жизни. Но жизнь, как известно, похожа на зебру, поэтому следует принять предстоящие испытания с достоинством, терпеливо перенести их, и дело быстро наладится. ',
                 'Четвёрка пентаклей': 'Стоит задуматься, правильно ли выбрано направление приложения усилий. Нередко бывает, что карта указывает на то, что человек тратит все свои силы на действия, которые лишь вредят реализации его планов. Получив такую карту дня, нужно задуматься: правильно ли спланирован день, достойна ли мотивация предполагаемых действий. В противном случае можно получить нечто, противоположное желаемому. ',
                 'Тройка пентаклей': 'В качестве карты дня, тройка пентаклей рекомендует отказаться от тормозящих развитие пережитков прошлого и перейти на качественно новый уровень. Форма этого отказа может быть различной – можно выяснить, наконец, отношения с партнером, поменять работу или закончить давно начатую работу. В любом случае, это должно быть окончание некоего рутинного этапа прошлой жизни, что позволит начать новое дело. ',
                 'Двойка пентаклей': 'Сегодня не нужно слишком серьезно относиться к своей трудовой деятельности. Вполне будет достаточно немного игривости, гибкости и легкомысленности. Не стоит отказываться от возможности – попробовать что-то новое, чтобы проверить свои способности. И даже если что-то не получится сразу, всегда можно повторить попытку. В этот день человек будет хорошо приспосабливаться к полученным заданиям. Могут произойти некоторые изменения в бизнесе, связанные с незначительной прибылью. Аркан несет освобождение от унылости, и нужно правильно распорядиться этим днем. ',
                 'Туз жезлов': 'На сегодняшний день у человека, которому гадают, хватит энергии для того, чтобы заняться новым проектом. Можно сдвинуть «с мёртвой точки» нерешённые вопросы и проблемы. Какая бы идея человека не посетила, он может смело браться за её реализацию. У него всё получится. Увлечённость творческими находками не оставит равнодушными его коллег. Они поддержат гадающего в его проектах. Возможно, что появится неожиданная информация, которая откроет новые возможности. Даже нестандартные решения и безумные идеи могут принести неплохой денежный доход. Также возможно получение новостей, которые могут повлиять на одну из сфер жизни. ',
                 'Король жезлов': 'Хорошее предзнаменование – вот о чём говорит данная карта. Дела складываются успешно. Возможно, что какой –то человек окажет помощь в одной из сфер жизни. Надо готовиться к получению неожиданной прибыли, предложении о новой должности. Женщине Король Жезлов предрекает встречу с богатым поклонником. Как вариант, знаки внимания ей может начать оказывать её руководитель. Станет ли «служебный роман» удачным, будет зависеть от неё. В течение дня человек, которому гадают получит очень важное известие, способное изменить одну из сфер его жизни. Если дело касается деловой сферы, переговоры и начало новых проектов пройдёт успешно. Руководство по достоинству сможет оценить энтузиазм человека, которому гадают. Его трудолюбие будет вознаграждено по достоинству. В любовных отношениях карта говорит о том, что партнёр готовит небольшой подарок. Возможно, это будет касаться планов относительно совместного отдыха в одной из восточных стран.',
                 'Королева жезлов' : 'День для решительных действий, когда человек будет ощущать в себе уверенность и сильную энергетику. Любая, даже самая трудная работа ему будет по плечу. Он готов делать решающие шаги, проявляет в себе храбрые качества и оптимистический настрой к делу. А окружающие люди это заметят, они пойдут за вами, потому что многим в жизни так не хватает человеческой поддержки, оптимизма и мудрых советов. Карта Королева Жезлов подарит человеку судьбоносную встречу с темпераментной натурой, которая сыграет важную роль в его жизни.',
                 'Рыцарь жезлов': 'Непросто будет гадающему в этот день. Возможно, предстоит показать себя окружающим не с лучшей стороны. Это может быть и ссора, и неприятности. В этот день не стоит начинать новые дела и реализовывать задуманное. Для этого подойдут другие дни. Если держать свои эмоции под контролем, гадающий может избежать многих проблем. Что бы ни случилось сегодня, следует сохранять спокойствие. ',
                 'Паж жезлов': 'В качестве карты дня Паж Жезлов предвещает яркое, необычное событие. Но нужно быть внимательным и не пропустить признака предстоящей приятной неожиданности. Это может быть и повышение по службе, и приятная встреча, и «роман века». Но это и вовсе не означает, что событие будет судьбоносным. Возможно, это окажется просто очень интересный и приятный эпизод, что превратится в сюжет для рассказов внукам. ',
                 'Десятка жезлов': 'Этот день для гадающего окажется сложным. Чтобы достичь поставленных целей, придётся приложить максимум усилий. С первого раза может ничего не получится. Какие бы проблемы не возникли сегодня, гадающий сможет их благополучно решить. Энергии и мудрости для этого ему хватит. Возможно, придётся потрудиться над новым проектом. Сразу может показаться, что он трудный. Отказываться от него не стоит, так как в случае успешного выполнения дела возможен дальнейший карьерный рост. ',
                 'Девятка жезлов': 'Девятка жезлов предупреждает гадающего: сегодня никому ничего не стоит говорить о себе и своих планах. Это необходимо, чтобы никто не мог на человека оказать негативного влияния. Лучше побыть в одиночестве. Особенно необходимо остерегаться вступать в диалог с теми людьми, с кем недавно была ссора. Возможно повторение конфликта. Если есть возможность, на работе лучше взять отгул и остаться дома. Следует прислушаться к своему внутреннему голосу во время принятия решений, чтобы вновь не наступить на одни и те же грабли, что и в прошлый раз. ',
                 'Восьмёрка жезлов': 'День, когда человек может получить от судьбы радость и благополучие. Будут происходить только положительные события и желанные перемены. Стоит ожидать хороших известий (в виде письма, телефонного звонка). Человек запомнит этот день как удачный и счастливый. Если человек решил заняться каким-то новым делом, то у него это прекрасно получится. Он сможет добиться отличных успехов, и даже намного раньше, чем сам того ожидал. Осуществятся и долговременные планы. В этот день произойдут удивительные и неожиданные события, которые полностью изменят всю жизнь за минуту. ',
                 'Семёрка жезлов': 'День, когда может произойти очень важное дело в жизни, и не упустите этот момент. Могут появиться соперники и недоброжелатели, которые попытаются навредить вам, не дайте им этого сделать, бросайтесь в бой. У человека под влиянием карты Семерка жезлов будут неоспоримые права для того, чтобы напомнить своим врагам о том, что с его мнением нужно считаться. Только благодаря смелости и решительности, он достигнет желаемого успеха. Карта указывает на прибыль и выгоду, ее даже нередко называют «символом сокровищ». Если человек будет прочно стоять на ногах, то никакие соперники, ему не страшны. ',
                 'Шестёрка жезлов': 'День будет очень удачный, принесет множество приятных сюрпризов в виде разрешившихся проблем, над которыми гадающий долгий период времени хлопотал. Начатые недавно дела пойдут в гору. Стоит помнить о том, что успешное разрешение будет только у тех дел, которые приносили головную боль и большие растраты, то есть достижение цели будет полностью оправданным и заслуженным. На бытовом уровне карта может предзнаменовать просто денежное вознаграждение или премию. Стоит разделить вкус победы с близкими людьми, устройте праздник! Это принесет приятные эмоции и вам, и окружающим. ',
                 'Пятёрка жезлов': 'Сегодня вам предстоит испытание, поэтому нужно быть максимально к нему готовым. Не стоит переживать по этому поводу, ведь это своего рода экзамен, по итогу которого, вы сможете подтвердить самому себе вашу способность решать задачи, что позитивно скажется на вашей самооценке. Это может затрагивать разные области, к примеру психологическое противоборство с близким человеком или конкуренции на работе, и там и там нельзя давать слабину, нужно показать что вы до сих пор в отличной форме. В любом случае, несмотря на результат, будь то победа или проигрыш, вы получите положительный опыт. Если вы открыто встретите это испытание и сделаете все что в ваших силах, победа обязательно будет за вами, проиграете не беда, вы и в этом случае подчерпнете что то нужное. ',
                 'Четвёрка жезлов': 'Сегодня - тот самый день, когда можно делать всё, что просит душа. Можно смело знакомиться с новыми людьми, ведь есть шанс, что среди них могут оказаться те, кто станут верными друзьями. Любимой (или любимому) можно сделать подарок или организовать настоящий праздник. Если есть человек, с которым гадающий в ссоре - это лучший день для примирения. Грустные мысли надо гнать от себя прочь в этот день. ',
                 'Тройка жезлов': 'Человек, на которого делается расклад, имеет чёткие жизненные ориентиры. Он на правильном пути к своему духовному развитию. Сегодня, возможно, кто-то из коллег предложит подработку. Возможно - совместное участие в деле, и поэтому нужно соглашаться. Совместная деятельность позволит реализовать творческий потенциал. Если постараться, можно неплохо заработать. Использовав этот шанс, гадающий человек может подумать о смене профессии. В новом виде деятельности он сможет в полной мере реализовать свои возможности. При этом прибыль будет увеличиваться. ',
                 'Двойка жезлов': 'День указывает на то, что человек проявляет свою нерешительность. В момент, когда необходимо принять решение или взяться за какую-то работу, он делает ход назад. Просто под влиянием Аркана он не может сосредоточиться и у него ничего не получается. Отбросим все сомнения и переживания, самое верное решение – занять нейтральную сторону. Если кто-то будет от вас требовать больше, чем вы можете сделать, так и скажите. Достаточно внятно объяснить собеседнику свое отношение к делу, не возлагая на себя большой ответственности. Можно сказать, что вы это лучше сделаете завтра, а не сегодня. Таким образом, можно избежать ненужных проблем и стрессов.',
                 'Шут' : 'Если человеку в качестве карты дня выпал Шут, то ему предстоит очень много новых и интересных дел. Придется импровизировать, много шутить, быть инициатором и первопроходцем. В этом нет ничего плохого, ведь иногда так полезно снова почувствовать себя беззаботным ребенком, воспринимающим жизнь как веселую игру. В течение дня нужно избегать предвзятости оценок и косности. Для того чтобы день сложился хорошо, нужно подходить ко всем делам творчески и с энтузиазмом. Не страшно, если придется начинать работу заново. Положительная энергетика дня позволит справиться с делами без особых затруднений и препятствий. Новаторский подход, радость новых начинаний позволят получить удовольствие и от работы, и от выполнения повседневных домашних обязанностей. В личной жизни не помешают романтика, необычные подарки, сюрпризы и комплименты. ',
                 'Маг' : 'Карта Таро говорит о том, что человеку необходимо проявить свою инициативу, ведь он значительно хорошо вооружен, и сможет показать свою логику и благоразумие. Даже если в этот день ему обязательно нужно будет срочно принимать решение, то ничего не помешает ему это сделать. По крайней мере, день очень благоприятный. Гадающий должен сделать первый шаг, чтобы убедиться в своих способностях, которые раскроются в полной мере. Любые встречи и переговоры пройдут великолепно, если человек не побоится проявить свои навыки. Главное, чтобы присутствовала легкость и смелость в действиях, и все будет хорошо. ',
                 'Жрица' : 'Карта Таро говорит о том, что человеку нужно прислушаться к внутреннему голосу и действовать согласно ситуации. В этот день стоит положиться на интуицию. Не следует искать объяснений и оправданий тем вопросам, которые не хочется принимать. Необходимо ценить время, и каждую секунду этого дня. Побудьте с собой, обращайтесь к своему внутреннему голосу. Обязательно проявляйте добро к окружающим людям, храните ясность ума и чувств. Не нужно проявлять активные действия в своих делах, лучше переждать. Карта может скрывать тайны и внутреннюю мудрость, а также напомнить человеку о том, что он забыл о чем-то важном. ',
                 'Императрица' : 'Карта Таро говорит о том, что эта карта принесет увлекательный день. Возможно, человеку захочется отправиться на природу, чтобы дать энергию и подпитку своему организму и душе. У человека появится достаточно много интересных идей, а также творческих замыслов. То, что долго было неосуществимым, в этот день осуществится. И если совсем недавно человек просто махнул рукой на обстоятельства, он заметит, как они начнут бурно развиваться в лучшую сторону. И за какое-бы дело человек сегодня не взялся, у него все получится. Его ожидает успех, а все потому что, он интуитивно будет следовать правильному направлению.',
                 'Император' : 'В качестве карты дня Император является хорошим предзнаменованием. Его появление говорит о том, что человеку в этот день будет удаваться все, за что он возьмется, его сил, энергии и решимости хватит на все. Если у него есть какое-либо сложное дело или проблема, решение которой долго откладывалось, надо взяться именно за это. Действовать нужно решительно, но взвешенно и основательно. Если же конкретной проблемы нет, Император советует просто попробовать воспользоваться ситуаций и переделать побольше поточных дел. ',
                 'Жрец' : 'Если вам выпал Верховный Жрец, то это получение толкового, разумного совета, подсказка о выходе из ситуации. Либо человек сам может стать учителем для кого-либо. Но не стоит самоутверждаться за счёт другого. Правила либо ритуалы, которые производились и помогали раньше, уже стали бессмысленны, и пустая болтовня не пригодится. Нужно смотреть внутрь дела, искать там ценности, которые с первого взгляда не видно. Вас могут вовлечь в какой-либо конфликт, но тогда вам лучше всего постараться либо избежать его, либо решить вопрос, не пренебрегая моралью. Если человек решился сделать какой-либо выбор, то он должен всё как следует обдумать, чтобы сделать всё правильно. В противном случае ему придется об этом очень сильно и долго жалеть.',
                 'Влюблённые' : 'Сегодня необходимо принять окончательное решение, независимо от того, связано ли это с профессиональной деятельностью или с какими-то личными делами. Если человек долго в чем-то сомневался или просто не торопил события, то теперь судьба дает ему шанс поставить окончательную точку. Пусть внутренний голос, сердце и ум – подскажут вам правильное решение. Карта дня обещает благополучное значение, а значит, направляет человека в нужное русло. Он должен склеить - разбитое, восстановить – разрушенное, помириться с теми, с кем в ссоре. Если мужчина хотел сделать предложение девушке – самое время. ',
                 'Колесница' : 'Сегодня самое время достигать своих целей. И самое главное, сосредоточиться. Если есть какие-то важные и неотложные дела, необходимо их делать именно сегодня. Даже не стоит долго раздумывать, они будут выполнены качественно. Следует двигаться только вперед, преодолевая все препятствия на своем пути. Противоречия и конфликты будут устранены в этот день. Только решительные шаги и действия поспособствуют удаче. Но если на данном этапе нет цели, то можно заняться чем-нибудь новым. Будут удачными путешествия и поездки. ',
                 'Сила' : 'Как карта дня Сила символизирует увлеченность и успех начинаний. Она рекомендует приложить свои таланты к работе или активизироваться в личном плане. В день, на который выпала такая карта, сил хватит на все. Если же возникнут какие-то проблемы и препятствия, не нужно пугаться. Они будут преодолимы, но действовать надо без агрессии, но решительно, не бояться и в контратаку переходить. Тогда все начинания обязательно закончатся успешно, а противник будет принужден к капитуляции. ',
                 'Отшельник' : 'Если Отшельник выпал в качестве карты дня, то в этот день следует полагаться, лишь на себя самого. Решения нужно принимать не спеша, взвешенно и именно что самостоятельно. Если имеются важные дела, делать их надо скрупулезно и ответственно, и опять-таки полагаясь исключительно на собственные возможности. Такой день отлично подойдет для ухода за собой, а особенно – для духовной практики, оценки собственной личности, медитаций. ',
                 'Фортуна' : 'Сегодня человека ожидают положительные события в жизни. И что бы ни происходило в судьбе человека, все нужно принимать с благодарностью. Есть возможность в этот день достичь многого, можно сделать первый шаг и проявить инициативу. Могут каким-то образом произойти события, которые будут из прошлой жизни. День полон приятных сюрпризов и неожиданностей, стоит полагаться на везенье и удачу. Сегодня все не случайно, обращайте свое внимание на знаки судьбы, они что-нибудь подскажут. Карта человека ведет к определенным событиям, которые должны произойти в его жизни. Это, действительно, можно назвать судьбой, которая улыбается. ',
                 'Справедливость' : 'Аркан говорит о том, что необходимо очень хорошо и трезво размышлять над текущими делами. Если разрешается какой-либо конфликт, принимаются какие-либо решения, внимательно и дотошно просчитайте все последствия ваших действий. Просмотрите условия договора, не упускайте мелочей. ',
                 'Повешенный' : 'Нужно набраться терпения и просто пережить этот день. Попытки как-то повлиять на события и ускорить их ход приведут только к противоположному результату. Лучше потратить время на осмысление положения и разработку планов действий на будущее. Иногда приходится думать о том, чем можно пожертвовать ради того, чтобы разрешить проблему, если нельзя вовсе отказаться от застопорившегося дела или оставить все как есть. ',
                 'Смерть' : 'В этот день для человека происходящее станет пройденным этапом (прошлое). Для кого-то это будет приятной вестью, что наконец-то это произошло и все завершилось, а кому-то не захочется расставаться, ведь это время так много значило для него. Но ничего здесь не поделаешь, нужно смириться с обстоятельствами, и подготовиться к тому, чтобы расстаться с прошлым. Нет смысла пытаться сохранить то, что было, попробуйте отпустить его. Только так по-настоящему можно будет почувствовать себя счастливым и свободным, правда понятие придет чуточку позже. Человек испытает облегчение и освобождение. ',
                 'Умеренность' : 'Этот день можно, по истине, назвать волшебным. У человека произойдут в жизни какие-то новые открытия и события, что-то произойдет, связанное с творчеством. Возможно, у человека получится не только наладить свою жизнь, он сможет в чем-то помочь и другим людям, с удовольствием решит их проблемы. Если есть проблемы в любовных отношениях, то он с легкостью их наладит именно сегодня. Другого такого дня уже не будет, не упустите момент! Только в этот день можно сгладить острые углы и помириться со своей второй половиной. А если кто-то решил сделать предложение руки и сердца свой возлюбленной – делайте, она согласится. ',
                 'Дьявол' : 'В этот день человек увидит теневую сторону своего характера. Возможно, кто-то собьет человека с пути и направит его на неблаговидный поступок, а может он и вовсе изменит своим принципам. Не исключено некое внутреннее побуждение, о котором человек даже не подозревал или просто думал, что уже давно все преодолел. Нельзя подавлять в себе это побуждение, не стоит и винить себя, перебрасывать вину на других. Необходимо найти причину этому импульсу. Человеку предстоит пройти немало испытаний, а скорее, искушений. И главное, чтобы он не вознесся над другими. ',
                 'Башня' : 'Аркан гласит - в вашей жизни всё изменилось, вы потеряли то, что было вам очень дорого. Однако прошлое не вернуть, нужно извлечь из случившегося урок. Возможно, в будущем вы поймёте, что это потеря была для вас благоприятной. Если же Башня в перевернутом положении, это означает, что возможности у вас всё же есть, но они ограничены. Лучше всего оградить себя от нервного стресса, определите, что именно вам хочется. ',
                 'Звезда' : 'Вам нужно ценить представившиеся вам возможности, верить в себя, вот что советует карта. Высшие силы благоволят вам, даже если ваша цель кажется нереальной, план сумасшедшим, не нужно останавливаться, вы поставили себе цель, и ничего им не помешает. Перспективы выйдут за рамки каких-то определённых договорённостей, и человек увидит препятствия, но одновременно увидит, как их преодолеть. ',
                 'Луна' : 'День может человеку показаться неблагоприятным. Причиной этому может послужить дурной сон, который приснился. Не стоит придавать особого значения своим снам, и пугать себя призраками и мистикой. Если перед человеком стоит какое-то важное дело (пусть даже неприятное и сложное), не следует его избегать. Ведь после преодоления страха обязательно последует что-то новое и интересное. Просто нужно собраться с духом, и сделать этот важный и ответственный шаг. День стоит принимать таким, какой он есть. Несмотря на все боязни, пусть и медленными шагами, но надо двигаться вперед, а не назад. Уже позже можно будет обнаружить, как вы многого достигли.',
                 'Солнце' : 'День запомнится ярким и счастливым. Либо это будет связано с какой-то победой, а возможно, просто день пройдет без проблем и забот. Следует взяться за какое-нибудь новое занятие, оно станет успешным. Не забывайте и о том, что найдутся люди, которые тоже захотят принять в этом участие. Не отказывайте им в такой возможности. Если с кем-то в этот день поссорились или кто-то на вас обижается, то лучше поскорее уладить этот вопрос. Нужно незамедлительно помириться, попросить прощения. Именно в этот день все получится. ',
                 'Суд' : 'В день, на который выпала такая карта, можно решить любую проблему, и неважно, возникла она вчера или десять лет назад. Все может получиться даже само собой. Но от человека требуется внимательность, чтобы уловить правильный момент для действия. Если это получится – успех гарантирован. В определении нужной минуты следует полагаться исключительно на себя, собственное внутреннее чутье. ',
                 'Мир' : 'В этот день, как никогда, человек ощущает силы и гармонию с окружающим миром. Он в полной мере может насладиться этим днем, его спокойными и благоприятными очертаниями. Ему будет казаться, что все идет так, как и должно, либо он просто не придаст значения каким-то помехам. Если человек нуждается в месте, где он может найти себе приют, то карта дня направляет человека сделать этот шаг. Человек почувствует себя счастливым, и это может быть связано с дружбой, любовью, новым жильем. Он прекрасно будет выполнять свою работу. В отношениях с коллегами добьется искренности и гармонии. День может подарить поездку за границу от организации, где прекрасно сложится общение с зарубежными коллегами.'}

    arcan, value = random.choice(list(card_dict.items()))
    global card
    card = QMainWindow()
    ui = Ui_RandomWin()
    ui.setupUi(card)
    ui.textBrowser.setText(f'{value}')
    card.setWindowTitle(f'{arcan}')
    card.show()

ui.Day_card.clicked.connect(openDayCard)

# Открываем окно с мастью Мечи
def openSwordWindow():
    global sword_win
    sword_win = QMainWindow()
    ui = Ui_SwordsWindow()
    ui.setupUi(sword_win)
    window.close()
    sword_win.show()

    # Возвращаемся в главное окно
    def returnToMainWindow():
        sword_win.close()
        window.show()
    ui.button_back_to_menu.clicked.connect(returnToMainWindow)

    # Открываем Туз Мечей
    def openAceOfSwords():
        global ace_win
        ace_win = QMainWindow()
        ui = Ui_AceOfSwords()
        ui.setupUi(ace_win)
        sword_win.close()
        ace_win.show()

        # Возврат в главное окно из Туза Мечей
        def returnToMainWindow():
            ace_win.close()
            window.show()

        # Возврат к мечам из Туза Мечей
        def returnToSwords():
            ace_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ace.clicked.connect(openAceOfSwords)

    # Открываем Короля Мечей
    def openKingOfSwords():
        global king_win
        king_win = QMainWindow()
        ui = Ui_KingOfSwords()
        ui.setupUi(king_win)
        sword_win.close()
        king_win.show()

        # Возврат в главное окно из Короля Мечей
        def returnToMainWindow():
            king_win.close()
            window.show()

        # Возврат к мечам из Короля Мечей
        def returnToSwords():
            king_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_king.clicked.connect(openKingOfSwords)

    # Открываем Королеву мечей
    def openQueenOfSwords():
        global queen_win
        queen_win = QMainWindow()
        ui = Ui_QueenOfSwords()
        ui.setupUi(queen_win)
        sword_win.close()
        queen_win.show()

        # Возврат в главное окно из Дамы Мечей
        def returnToMainWindow():
            queen_win.close()
            window.show()

        # Возврат к мечам из Дамы Мечей
        def returnToSwords():
            queen_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_queen.clicked.connect(openQueenOfSwords)

    # Открываем Рыцаря Мечей
    def openKnighthOfSwords():
        global knight_win
        knight_win = QMainWindow()
        ui = Ui_KnightOfSwords()
        ui.setupUi(knight_win)
        sword_win.close()
        knight_win.show()

        # Возврат в главное окно из Рыцаря Мечей
        def returnToMainWindow():
            knight_win.close()
            window.show()

        # Возврат к мечам из Рыцаря Мечей
        def returnToSwords():
            knight_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_knight.clicked.connect(openKnighthOfSwords)

    # Открываем Пажа Мечей
    def openPageOfSwords():
        global page_win
        page_win = QMainWindow()
        ui = Ui_PageOfSwords()
        ui.setupUi(page_win)
        sword_win.close()
        page_win.show()

        # Возврат в главное окно из Пажа Мечей
        def returnToMainWindow():
            page_win.close()
            window.show()

        # Возврат к мечам из Пажа Мечей
        def returnToSwords():
            page_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_page.clicked.connect(openPageOfSwords)

    # Открываем Десятку Мечей
    def openTenOfSwords():
        global ten_win
        ten_win = QMainWindow()
        ui = Ui_TenOfSwords()
        ui.setupUi(ten_win)
        sword_win.close()
        ten_win.show()

        # Возврат в главное окно из Десятки Мечей
        def returnToMainWindow():
            ten_win.close()
            window.show()

        # Возврат к мечам из Десятки Мечей
        def returnToSwords():
            ten_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ten_sw.clicked.connect(openTenOfSwords)

    # Открываем Девятку Мечей
    def openNineOfSwords():
        global nine_win
        nine_win = QMainWindow()
        ui = Ui_NineOfSwords()
        ui.setupUi(nine_win)
        sword_win.close()
        nine_win.show()

        # Возврат в главное окно из Девятки Мечей
        def returnToMainWindow():
            nine_win.close()
            window.show()

        # Возврат к мечам из Девятки Мечей
        def returnToSwords():
            nine_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_nine_sw.clicked.connect(openNineOfSwords)

    # Открываем Восьмерку Мечей
    def openEightOfSwords():
        global eight_win
        eight_win = QMainWindow()
        ui = Ui_EightOfSwords()
        ui.setupUi(eight_win)
        sword_win.close()
        eight_win.show()

        # Возврат в главное окно из Восьмерки Мечей
        def returnToMainWindow():
            eight_win.close()
            window.show()

        # Возврат к мечам из Восьмерки Мечей
        def returnToSwords():
            eight_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_eight_sw.clicked.connect(openEightOfSwords)

    # Открываем Семерку Мечей
    def openSevenOfSwords():
        global seven_win
        seven_win = QMainWindow()
        ui = Ui_SevenOfSwords()
        ui.setupUi(seven_win)
        sword_win.close()
        seven_win.show()

        # Возврат в главное окно из Семерки Мечей
        def returnToMainWindow():
            seven_win.close()
            window.show()

        # Возврат к мечам из Семерки Мечей
        def returnToSwords():
            seven_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_seven_sw.clicked.connect(openSevenOfSwords)

   # Открываем Шестерку Мечей
    def openSixOfSwords():
        global six_win
        six_win = QMainWindow()
        ui = Ui_SixOfSwords()
        ui.setupUi(six_win)
        sword_win.close()
        six_win.show()

        # Возврат в главное окно из Шестерки Мечей
        def returnToMainWindow():
            six_win.close()
            window.show()

        # Возврат к мечам из Шестерки Мечей
        def returnToSwords():
            six_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_six_sw.clicked.connect(openSixOfSwords)

   # Открываем Пятерку Мечей
    def openFiveOfSwords():
        global five_win
        five_win = QMainWindow()
        ui = Ui_FiveOfSwords()
        ui.setupUi(five_win)
        sword_win.close()
        five_win.show()

        # Возврат в главное окно из Пятерки Мечей
        def returnToMainWindow():
            five_win.close()
            window.show()

        # Возврат к мечам из Пятерки Мечей
        def returnToSwords():
            five_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_five_sw.clicked.connect(openFiveOfSwords)

   # Открываем Четверку Мечей
    def openFourOfSwords():
        global four_win
        four_win = QMainWindow()
        ui = Ui_FourOfSwords()
        ui.setupUi(four_win)
        sword_win.close()
        four_win.show()

        # Возврат в главное окно из Четверки Мечей
        def returnToMainWindow():
            four_win.close()
            window.show()

        # Возврат к мечам из Четверки Мечей
        def returnToSwords():
            four_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_four_sw.clicked.connect(openFourOfSwords)

    # Открываем Тройку Мечей
    def openThreeOfSwords():
        global three_win
        three_win = QMainWindow()
        ui = Ui_ThreeOfSwords()
        ui.setupUi(three_win)
        sword_win.close()
        three_win.show()

        # Возврат в главное окно из Тройки Мечей
        def returnToMainWindow():
            three_win.close()
            window.show()

        # Возврат к мечам из Тройки Мечей
        def returnToSwords():
            three_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_three_sw.clicked.connect(openThreeOfSwords)

    # Открываем Двойку Мечей
    def openTwoOfSwords():
        global two_win
        two_win = QMainWindow()
        ui = Ui_TwoOfSwords()
        ui.setupUi(two_win)
        sword_win.close()
        two_win.show()

        # Возврат в главное окно из Двойки Мечей
        def returnToMainWindow():
            two_win.close()
            window.show()

        # Возврат к мечам из Двойки Мечей
        def returnToSwords():
            two_win.close()
            sword_win.show()
        ui.button_back_to_aces.clicked.connect(returnToSwords)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_two_sw.clicked.connect(openTwoOfSwords)


ui.button_swords.clicked.connect(openSwordWindow)

# Открываем окно с мастью Кубки
def openCupsWindow():
    global cups_win
    cups_win = QMainWindow()
    ui = Ui_CupsWindow()
    ui.setupUi(cups_win)
    window.close()
    cups_win.show()

    # Возвращаемся в главное окно
    def returnToMainWindow():
        cups_win.close()
        window.show()
    ui.button_back_to_menu.clicked.connect(returnToMainWindow)

    # Открываем Туз Кубков
    def openAceOfCups():
        global ace_win
        ace_win = QMainWindow()
        ui = Ui_AceOfCups()
        ui.setupUi(ace_win)
        cups_win.close()
        ace_win.show()

        # Возврат в главное окно из Туза Кубков
        def returnToMainWindow():
            ace_win.close()
            window.show()

        # Возврат к Кубкам из Туза Кубков
        def returnToCups():
            ace_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ace_cup.clicked.connect(openAceOfCups)

    # Открываем Короля Кубков
    def openKingOfCups():
        global king_win
        king_win = QMainWindow()
        ui = Ui_KingOfCups()
        ui.setupUi(king_win)
        cups_win.close()
        king_win.show()

        # Возврат в главное окно из Короля Кубков
        def returnToMainWindow():
            king_win.close()
            window.show()

        # Возврат к Кубкам из Короля Кубков
        def returnToCups():
            king_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_king_cup.clicked.connect(openKingOfCups)

    # Открываем Королеву Кубков
    def openQueenOfCups():
        global queen_win
        queen_win = QMainWindow()
        ui = Ui_QueenOfCups()
        ui.setupUi(queen_win)
        cups_win.close()
        queen_win.show()

        # Возврат в главное окно из Королевы Кубков
        def returnToMainWindow():
            queen_win.close()
            window.show()

        # Возврат к Кубкам из Королевы Кубков
        def returnToCups():
            queen_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_queen_cup.clicked.connect(openQueenOfCups)

    # Открываем Рыцаря Кубков
    def openKnightOfCups():
        global knight_win
        knight_win = QMainWindow()
        ui = Ui_KnightOfCups()
        ui.setupUi(knight_win)
        cups_win.close()
        knight_win.show()

        # Возврат в главное окно из Рыцаря Кубков
        def returnToMainWindow():
            knight_win.close()
            window.show()

        # Возврат к Кубкам из Рыцаря Кубков
        def returnToCups():
            knight_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_knight_cup.clicked.connect(openKnightOfCups)

    # Открываем Пажа Кубков
    def openPageOfCups():
        global page_win
        page_win = QMainWindow()
        ui = Ui_PageOfCups()
        ui.setupUi(page_win)
        cups_win.close()
        page_win.show()

        # Возврат в главное окно из Пажа Кубков
        def returnToMainWindow():
            page_win.close()
            window.show()

        # Возврат к Кубкам из Пажа Кубков
        def returnToCups():
            page_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_page_cup.clicked.connect(openPageOfCups)

    # Открываем Десятку Кубков
    def openTenOfCups():
        global ten_win
        ten_win = QMainWindow()
        ui = Ui_TenOfCups()
        ui.setupUi(ten_win)
        cups_win.close()
        ten_win.show()

        # Возврат в главное окно из Десятки Кубков
        def returnToMainWindow():
            ten_win.close()
            window.show()

        # Возврат к Кубкам из Десятки Кубков
        def returnToCups():
            ten_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ten_cup.clicked.connect(openTenOfCups)

    # Открываем Девятку Кубков
    def openNineOfCups():
        global nine_win
        nine_win = QMainWindow()
        ui = Ui_NineOfCups()
        ui.setupUi(nine_win)
        cups_win.close()
        nine_win.show()

        # Возврат в главное окно из Девятки Кубков
        def returnToMainWindow():
            nine_win.close()
            window.show()

        # Возврат к Кубкам из Девятки Кубков
        def returnToCups():
            nine_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_nine_cup.clicked.connect(openNineOfCups)

    # Открываем Восьмерку Кубков
    def openEightOfCups():
        global eight_win
        eight_win = QMainWindow()
        ui = Ui_EightOfCups()
        ui.setupUi(eight_win)
        cups_win.close()
        eight_win.show()

        # Возврат в главное окно из Восьмерки Кубков
        def returnToMainWindow():
            eight_win.close()
            window.show()

        # Возврат к Кубкам из Восьмерки Кубков
        def returnToCups():
            eight_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_eight_cup.clicked.connect(openEightOfCups)

    # Открываем Семерку Кубков
    def openSevenOfCups():
        global seven_win
        seven_win = QMainWindow()
        ui = Ui_SevenOfCups()
        ui.setupUi(seven_win)
        cups_win.close()
        seven_win.show()

        # Возврат в главное окно из Семерки Кубков
        def returnToMainWindow():
            seven_win.close()
            window.show()

        # Возврат к Кубкам из Семерки Кубков
        def returnToCups():
            seven_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_seven_cup.clicked.connect(openSevenOfCups)

    # Открываем Шестерку Кубков
    def openSixOfCups():
        global six_win
        six_win = QMainWindow()
        ui = Ui_SixOfCups()
        ui.setupUi(six_win)
        cups_win.close()
        six_win.show()

        # Возврат в главное окно из Шестерки Кубков
        def returnToMainWindow():
            six_win.close()
            window.show()

        # Возврат к Кубкам из Шестерки Кубков
        def returnToCups():
            six_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_six_cup.clicked.connect(openSixOfCups)

    # Открываем Пятерку Кубков
    def openFiveOfCups():
        global five_win
        five_win = QMainWindow()
        ui = Ui_FiveOfCups()
        ui.setupUi(five_win)
        cups_win.close()
        five_win.show()

        # Возврат в главное окно из Пятерки Кубков
        def returnToMainWindow():
            five_win.close()
            window.show()

        # Возврат к Кубкам из Пятерки Кубков
        def returnToCups():
            five_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_five_cup.clicked.connect(openFiveOfCups)

    # Открываем Четверку Кубков
    def openFourOfCups():
        global four_win
        four_win = QMainWindow()
        ui = Ui_FourOfCups()
        ui.setupUi(four_win)
        cups_win.close()
        four_win.show()

        # Возврат в главное окно из Четверки Кубков
        def returnToMainWindow():
            four_win.close()
            window.show()

        # Возврат к Кубкам из Четверки Кубков
        def returnToCups():
            four_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_four_cup.clicked.connect(openFourOfCups)

    # Открываем Тройку Кубков
    def openThreeOfCups():
        global three_win
        three_win = QMainWindow()
        ui = Ui_ThreeOfCups()
        ui.setupUi(three_win)
        cups_win.close()
        three_win.show()

        # Возврат в главное окно из Тройку Кубков
        def returnToMainWindow():
            three_win.close()
            window.show()

        # Возврат к Кубкам из Тройку Кубков
        def returnToCups():
            three_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_three_cup.clicked.connect(openThreeOfCups)

    # Открываем Двойку Кубков
    def openTwoOfCups():
        global two_win
        two_win = QMainWindow()
        ui = Ui_TwoOfCups()
        ui.setupUi(two_win)
        cups_win.close()
        two_win.show()

        # Возврат в главное окно из Двойки Кубков
        def returnToMainWindow():
            two_win.close()
            window.show()

        # Возврат к Кубкам из Двойки Кубков
        def returnToCups():
            two_win.close()
            cups_win.show()
        ui.button_back_to_cups.clicked.connect(returnToCups)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_two_cup.clicked.connect(openTwoOfCups)


ui.button_cups.clicked.connect(openCupsWindow)

# Открываем окно с Пентаклями
def openPentaclesWindow():
    global pentacles_win
    pentacles_win = QMainWindow()
    ui = Ui_PentaclesWindow()
    ui.setupUi(pentacles_win)
    window.close()
    pentacles_win.show()

    # Возвращаемся в главное окно
    def returnToMainWindow():
        pentacles_win.close()
        window.show()
    ui.button_back_to_menu.clicked.connect(returnToMainWindow)

    # Открываем Туз Пентаклей
    def openAceOfPentacles():
        global ace_win
        ace_win = QMainWindow()
        ui = Ui_AceOfPentacles()
        ui.setupUi(ace_win)
        pentacles_win.close()
        ace_win.show()

        # Возврат в главное окно из Туза Пентаклей
        def returnToMainWindow():
            ace_win.close()
            window.show()

        # Возврат к Пентаклям из Туза Пентаклей
        def returnToPentacles():
            ace_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ace_pen.clicked.connect(openAceOfPentacles)

    # Открываем Короля Пентаклей
    def openKingOfPentacles():
        global king_win
        king_win = QMainWindow()
        ui = Ui_KingOfPentacles()
        ui.setupUi(king_win)
        pentacles_win.close()
        king_win.show()

        # Возврат в главное окно из Короля Пентаклей
        def returnToMainWindow():
            king_win.close()
            window.show()

        # Возврат к Пентаклям из Короля Пентаклей
        def returnToPentacles():
            king_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_king_pen.clicked.connect(openKingOfPentacles)

 # Открываем Королеву Пентаклей
    def openQueenOfPentacles():
        global queen_win
        queen_win = QMainWindow()
        ui = Ui_QueenOfPentacles()
        ui.setupUi(queen_win)
        pentacles_win.close()
        queen_win.show()

        # Возврат в главное окно из Королевы Пентаклей
        def returnToMainWindow():
            queen_win.close()
            window.show()

        # Возврат к Пентаклям из Королевы Пентаклей
        def returnToPentacles():
            queen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_queen_pen.clicked.connect(openQueenOfPentacles)

    # Открываем Рыцаря Пентаклей
    def openKnightOfPentacles():
        global knight_win
        knight_win = QMainWindow()
        ui = Ui_KnightOfPentacles()
        ui.setupUi(knight_win)
        pentacles_win.close()
        knight_win.show()

        # Возврат в главное окно из Рыцаря Пентаклей
        def returnToMainWindow():
            knight_win.close()
            window.show()

        # Возврат к Пентаклям из Рыцаря Пентаклей
        def returnToPentacles():
            knight_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_knight_pen.clicked.connect(openKnightOfPentacles)

    # Открываем Пажа Пентаклей
    def openPageOfPentacles():
        global page_win
        page_win = QMainWindow()
        ui = Ui_PageOfPentacles()
        ui.setupUi(page_win)
        pentacles_win.close()
        page_win.show()

        # Возврат в главное окно из Пажа Пентаклей
        def returnToMainWindow():
            page_win.close()
            window.show()

        # Возврат к Пентаклям из Пажа Пентаклей
        def returnToPentacles():
            page_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_page_pen.clicked.connect(openPageOfPentacles)

    # Открываем Десятку Пентаклей
    def openTenOfPentacles():
        global ten_win
        ten_win = QMainWindow()
        ui = Ui_TenOfPentacles()
        ui.setupUi(ten_win)
        pentacles_win.close()
        ten_win.show()

        # Возврат в главное окно из Десятки Пентаклей
        def returnToMainWindow():
            ten_win.close()
            window.show()

        # Возврат к Пентаклям из Десятки Пентаклей
        def returnToPentacles():
            ten_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ten_pen.clicked.connect(openTenOfPentacles)

    # Открываем Девятку Пентаклей
    def openNineOfPentacles():
        global nine_pen_win
        nine_pen_win = QMainWindow()
        ui = Ui_NineOfPentacles()
        ui.setupUi(nine_pen_win)
        pentacles_win.close()
        nine_pen_win.show()

        # Возврат в главное окно из Девятки Пентаклей
        def returnToMainWindow():
            nine_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Девятки Пентаклей
        def returnToPentacles():
            nine_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_nine_pen.clicked.connect(openNineOfPentacles)

    # Открываем Восьмерку Пентаклей
    def openEightOfPentacles():
        global eight_pen_win
        eight_pen_win = QMainWindow()
        ui = Ui_EightOfPentacles()
        ui.setupUi(eight_pen_win)
        pentacles_win.close()
        eight_pen_win.show()

        # Возврат в главное окно из Восьмерки Пентаклей
        def returnToMainWindow():
            eight_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Восьмерки Пентаклей
        def returnToPentacles():
            eight_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_eight_pen.clicked.connect(openEightOfPentacles)

    # Открываем Семерку Пентаклей
    def openSevenOfPentacles():
        global seven_pen_win
        seven_pen_win = QMainWindow()
        ui = Ui_SevenOfPentacles()
        ui.setupUi(seven_pen_win)
        pentacles_win.close()
        seven_pen_win.show()

        # Возврат в главное окно из Семерки Пентаклей
        def returnToMainWindow():
            seven_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Семерки Пентаклей
        def returnToPentacles():
            seven_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_seven_pen.clicked.connect(openSevenOfPentacles)

    # Открываем Шестерку Пентаклей
    def openSixOfPentacles():
        global six_pen_win
        six_pen_win = QMainWindow()
        ui = Ui_SixOfPentacles()
        ui.setupUi(six_pen_win)
        pentacles_win.close()
        six_pen_win.show()

        # Возврат в главное окно из Шестерки Пентаклей
        def returnToMainWindow():
            six_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Шестерки Пентаклей
        def returnToPentacles():
            six_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_six_pen.clicked.connect(openSixOfPentacles)

    # Открываем Пятерку Пентаклей
    def openFiveOfPentacles():
        global five_pen_win
        five_pen_win = QMainWindow()
        ui = Ui_FiveOfPentacles()
        ui.setupUi(five_pen_win)
        pentacles_win.close()
        five_pen_win.show()

        # Возврат в главное окно из Пятерки Пентаклей
        def returnToMainWindow():
            five_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Пятерки Пентаклей
        def returnToPentacles():
            five_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_five_pen.clicked.connect(openFiveOfPentacles)

    # Открываем Четверку Пентаклей
    def openFourOfPentacles():
        global four_pen_win
        four_pen_win = QMainWindow()
        ui = Ui_FourOfPentacles()
        ui.setupUi(four_pen_win)
        pentacles_win.close()
        four_pen_win.show()

        # Возврат в главное окно из Четверки Пентаклей
        def returnToMainWindow():
            four_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Четверки Пентаклей
        def returnToPentacles():
            four_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_four_pen.clicked.connect(openFourOfPentacles)

    # Открываем Тройку Пентаклей
    def openThreeOfPentacles():
        global three_pen_win
        three_pen_win = QMainWindow()
        ui = Ui_ThreeOfPentacles()
        ui.setupUi(three_pen_win)
        pentacles_win.close()
        three_pen_win.show()

        # Возврат в главное окно из Тройки Пентаклей
        def returnToMainWindow():
            three_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Тройки Пентаклей
        def returnToPentacles():
            three_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_three_pen.clicked.connect(openThreeOfPentacles)

    # Открываем Двойку Пентаклей
    def openTwoOfPentacles():
        global two_pen_win
        two_pen_win = QMainWindow()
        ui = Ui_TwoOfPentacles()
        ui.setupUi(two_pen_win)
        pentacles_win.close()
        two_pen_win.show()

        # Возврат в главное окно из Двойки Пентаклей
        def returnToMainWindow():
            two_pen_win.close()
            window.show()

        # Возврат к Пентаклям из Двойки Пентаклей
        def returnToPentacles():
            two_pen_win.close()
            pentacles_win.show()
        ui.button_back_to_pentacles.clicked.connect(returnToPentacles)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_two_pen.clicked.connect(openTwoOfPentacles)


ui.button_pentacles.clicked.connect(openPentaclesWindow)

# Открываем окно с Жезлами
def openWandsWindow():
    global wands_win
    wands_win = QMainWindow()
    ui = Ui_WandsWindow()
    ui.setupUi(wands_win)
    window.close()
    wands_win.show()

    # Возвращаемся в главное окно
    def returnToMainWindow():
        wands_win.close()
        window.show()
    ui.button_back_to_menu.clicked.connect(returnToMainWindow)

    # Открываем Туз Жезлов
    def openAceOfWands():
        global ace_wands_win
        ace_wands_win = QMainWindow()
        ui = Ui_AceOfWands()
        ui.setupUi(ace_wands_win)
        wands_win.close()
        ace_wands_win.show()

        # Возврат в главное окно из Туза Жезлов
        def returnToMainWindow():
            ace_wands_win.close()
            window.show()

        # Возврат к Жезлам из Туза Жезлов
        def returnToWands():
            ace_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ace_wands.clicked.connect(openAceOfWands)

    # Открываем Короля Жезлов
    def openKingOfWands():
        global king_wands_win
        king_wands_win = QMainWindow()
        ui = Ui_KingOfWands()
        ui.setupUi(king_wands_win)
        wands_win.close()
        king_wands_win.show()

        # Возврат в главное окно из Короля Жезлов
        def returnToMainWindow():
            king_wands_win.close()
            window.show()

        # Возврат к Жезлам из Короля Жезлов
        def returnToWands():
            king_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_king_wands.clicked.connect(openKingOfWands)

    # Открываем Королеву Жезлов
    def openQueenOfWands():
        global queen_wands_win
        queen_wands_win = QMainWindow()
        ui = Ui_QueenOfWands()
        ui.setupUi(queen_wands_win)
        wands_win.close()
        queen_wands_win.show()

        # Возврат в главное окно из Королевы Жезлов
        def returnToMainWindow():
            queen_wands_win.close()
            window.show()

        # Возврат к Жезлам из Королевы Жезлов
        def returnToWands():
            queen_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_queen_wands.clicked.connect(openQueenOfWands)

    # Открываем Рыцаря Жезлов
    def openKnightOfWands():
        global knight_wands_win
        knight_wands_win = QMainWindow()
        ui = Ui_KnightOfWands()
        ui.setupUi(knight_wands_win)
        wands_win.close()
        knight_wands_win.show()

        # Возврат в главное окно из Рыцаря Жезлов
        def returnToMainWindow():
            knight_wands_win.close()
            window.show()

        # Возврат к Жезлам из Рыцаря Жезлов
        def returnToWands():
            knight_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_knight_wands.clicked.connect(openKnightOfWands)

    # Открываем Пажа Жезлов
    def openPageOfWands():
        global page_wands_win
        page_wands_win = QMainWindow()
        ui = Ui_PageOfWands()
        ui.setupUi(page_wands_win)
        wands_win.close()
        page_wands_win.show()

        # Возврат в главное окно из Пажа Жезлов
        def returnToMainWindow():
            page_wands_win.close()
            window.show()

        # Возврат к Жезлам из Пажа Жезлов
        def returnToWands():
            page_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_page_wands.clicked.connect(openPageOfWands)

    # Открываем Десятку Жезлов
    def openTenOfWands():
        global ten_wands_win
        ten_wands_win = QMainWindow()
        ui = Ui_TenOfWands()
        ui.setupUi(ten_wands_win)
        wands_win.close()
        ten_wands_win.show()

        # Возврат в главное окно из Десятки Жезлов
        def returnToMainWindow():
            ten_wands_win.close()
            window.show()

        # Возврат к Жезлам из Десятки Жезлов
        def returnToWands():
            ten_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_ten_wands.clicked.connect(openTenOfWands)

    # Открываем Девятку Жезлов
    def openNineOfWands():
        global nine_wands_win
        nine_wands_win = QMainWindow()
        ui = Ui_NineOfWands()
        ui.setupUi(nine_wands_win)
        wands_win.close()
        nine_wands_win.show()

        # Возврат в главное окно из Девятки Жезлов
        def returnToMainWindow():
            nine_wands_win.close()
            window.show()

        # Возврат к Жезлам из Девятки Жезлов
        def returnToWands():
            nine_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_nine_wands.clicked.connect(openNineOfWands)

    # Открываем Восьмерку Жезлов
    def openEightOfWands():
        global eight_wands_win
        eight_wands_win = QMainWindow()
        ui = Ui_EightOfWands()
        ui.setupUi(eight_wands_win)
        wands_win.close()
        eight_wands_win.show()

        # Возврат в главное окно из Восьмерки Жезлов
        def returnToMainWindow():
            eight_wands_win.close()
            window.show()

        # Возврат к Жезлам из Восьмерки Жезлов
        def returnToWands():
            eight_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_eight_wands.clicked.connect(openEightOfWands)

    # Открываем Семерку Жезлов
    def openSevenOfWands():
        global seven_wands_win
        seven_wands_win = QMainWindow()
        ui = Ui_SevenOfWands()
        ui.setupUi(seven_wands_win)
        wands_win.close()
        seven_wands_win.show()

        # Возврат в главное окно из Семерки Жезлов
        def returnToMainWindow():
            seven_wands_win.close()
            window.show()

        # Возврат к Жезлам из Семерки Жезлов
        def returnToWands():
            seven_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_seven_wands.clicked.connect(openSevenOfWands)

    # Открываем Шестерку Жезлов
    def openSixOfWands():
        global six_wands_win
        six_wands_win = QMainWindow()
        ui = Ui_SixOfWands()
        ui.setupUi(six_wands_win)
        wands_win.close()
        six_wands_win.show()

        # Возврат в главное окно из Шестерки Жезлов
        def returnToMainWindow():
            six_wands_win.close()
            window.show()

        # Возврат к Жезлам из Шестерки Жезлов
        def returnToWands():
            six_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_six_wands.clicked.connect(openSixOfWands)

    # Открываем Пятерку Жезлов
    def openFiveOfWands():
        global five_wands_win
        five_wands_win = QMainWindow()
        ui = Ui_FiveOfWands()
        ui.setupUi(five_wands_win)
        wands_win.close()
        five_wands_win.show()

        # Возврат в главное окно из Пятерки Жезлов
        def returnToMainWindow():
            five_wands_win.close()
            window.show()

        # Возврат к Жезлам из Пятерки Жезлов
        def returnToWands():
            five_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_five_wands.clicked.connect(openFiveOfWands)

    # Открываем Четверку Жезлов
    def openFourOfWands():
        global four_wands_win
        four_wands_win = QMainWindow()
        ui = Ui_FourOfWands()
        ui.setupUi(four_wands_win)
        wands_win.close()
        four_wands_win.show()

        # Возврат в главное окно из Четверки Жезлов
        def returnToMainWindow():
            four_wands_win.close()
            window.show()

        # Возврат к Жезлам из Четверки Жезлов
        def returnToWands():
            four_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_four_wands.clicked.connect(openFourOfWands)

    # Открываем Тройку Жезлов
    def openThreeOfWands():
        global three_wands_win
        three_wands_win = QMainWindow()
        ui = Ui_ThreeOfWands()
        ui.setupUi(three_wands_win)
        wands_win.close()
        three_wands_win.show()

        # Возврат в главное окно из Тройки Жезлов
        def returnToMainWindow():
            three_wands_win.close()
            window.show()

        # Возврат к Жезлам из Тройки Жезлов
        def returnToWands():
            three_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_three_wands.clicked.connect(openThreeOfWands)

    # Открываем Двойку Жезлов
    def openTwoOfWands():
        global two_wands_win
        two_wands_win = QMainWindow()
        ui = Ui_TwoOfWands()
        ui.setupUi(two_wands_win)
        wands_win.close()
        two_wands_win.show()

        # Возврат в главное окно из Двойки Жезлов
        def returnToMainWindow():
            two_wands_win.close()
            window.show()

        # Возврат к Жезлам из Двойки Жезлов
        def returnToWands():
            two_wands_win.close()
            wands_win.show()
        ui.button_back_to_wands.clicked.connect(returnToWands)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_two_wands.clicked.connect(openTwoOfWands)


ui.button_wands_2.clicked.connect(openWandsWindow)

# Открываем окно со Старшими арканами
def openMainArcansWindow():
    global main_arcans_win
    main_arcans_win = QMainWindow()
    ui = Ui_MainArcansWindow()
    ui.setupUi(main_arcans_win)
    window.close()
    main_arcans_win.show()

    # Возвращаемся в главное окно
    def returnToMainWindow():
        main_arcans_win.close()
        window.show()
    ui.button_back_to_menu.clicked.connect(returnToMainWindow)

    # Открываем Шута
    def openFool():
        global fool_win
        fool_win = QMainWindow()
        ui = Ui_Fool()
        ui.setupUi(fool_win)
        main_arcans_win.close()
        fool_win.show()

        # Возврат в главное окно из Шута
        def returnToMainWindow():
            fool_win.close()
            window.show()

        # Возврат к Старшим арканам из Шута
        def returnToMainArcans():
            fool_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_fool.clicked.connect(openFool)

    # Открываем Мага
    def openMage():
        global mage_win
        mage_win = QMainWindow()
        ui = Ui_Mage()
        ui.setupUi(mage_win)
        main_arcans_win.close()
        mage_win.show()

        # Возврат в главное окно из Мага
        def returnToMainWindow():
            mage_win.close()
            window.show()

        # Возврат к Старшим арканам из Мага
        def returnToMainArcans():
            mage_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_mage.clicked.connect(openMage)

    # Открываем Жрицу
    def openPriestess():
        global priestess_win
        priestess_win = QMainWindow()
        ui = Ui_Priestess()
        ui.setupUi(priestess_win)
        main_arcans_win.close()
        priestess_win.show()

        # Возврат в главное окно из Жрици
        def returnToMainWindow():
            priestess_win.close()
            window.show()

        # Возврат к Старшим арканам из Жрици
        def returnToMainArcans():
            priestess_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_pristess.clicked.connect(openPriestess)

    # Открываем Императрицу
    def openEmpress():
        global empress_win
        empress_win = QMainWindow()
        ui = Ui_Empress()
        ui.setupUi(empress_win)
        main_arcans_win.close()
        empress_win.show()

        # Возврат в главное окно из Императрицы
        def returnToMainWindow():
            empress_win.close()
            window.show()

        # Возврат к Старшим арканам из Императрицы
        def returnToMainArcans():
            empress_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_empress.clicked.connect(openEmpress)

    # Открываем Императора
    def openEmperor():
        global emperor_win
        emperor_win = QMainWindow()
        ui = Ui_Emperor()
        ui.setupUi(emperor_win)
        main_arcans_win.close()
        emperor_win.show()

        # Возврат в главное окно из Императора
        def returnToMainWindow():
            emperor_win.close()
            window.show()

        # Возврат к Старшим арканам из Императора
        def returnToMainArcans():
            emperor_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_emperor.clicked.connect(openEmperor)

    # Открываем Жреца
    def openHierophant():
        global hierophant_win
        hierophant_win = QMainWindow()
        ui = Ui_Hierophant()
        ui.setupUi(hierophant_win)
        main_arcans_win.close()
        hierophant_win.show()

        # Возврат в главное окно из Жреца
        def returnToMainWindow():
            hierophant_win.close()
            window.show()

        # Возврат к Старшим арканам из Жреца
        def returnToMainArcans():
            hierophant_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_hierophant.clicked.connect(openHierophant)

    # Открываем Влюбленных
    def openLovers():
        global lovers_win
        lovers_win = QMainWindow()
        ui = Ui_Lovers()
        ui.setupUi(lovers_win)
        main_arcans_win.close()
        lovers_win.show()

        # Возврат в главное окно из Влюбленных
        def returnToMainWindow():
            lovers_win.close()
            window.show()

        # Возврат к Старшим арканам из Влюбленных
        def returnToMainArcans():
            lovers_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_lovers.clicked.connect(openLovers)

    # Открываем Колесницу
    def openChariot():
        global chariot_win
        chariot_win = QMainWindow()
        ui = Ui_Chariot()
        ui.setupUi(chariot_win)
        main_arcans_win.close()
        chariot_win.show()

        # Возврат в главное окно из Колесницы
        def returnToMainWindow():
            chariot_win.close()
            window.show()

        # Возврат к Старшим арканам из Колесницы
        def returnToMainArcans():
            chariot_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_chariot.clicked.connect(openChariot)

    # Открываем Силу
    def openStrenght():
        global strenght_win
        strenght_win = QMainWindow()
        ui = Ui_Strenght()
        ui.setupUi(strenght_win)
        main_arcans_win.close()
        strenght_win.show()

        # Возврат в главное окно из Силы
        def returnToMainWindow():
            strenght_win.close()
            window.show()

        # Возврат к Старшим арканам из Силы
        def returnToMainArcans():
            strenght_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_strenght.clicked.connect(openStrenght)

    # Открываем Отшельника
    def openHermit():
        global hermit_win
        hermit_win = QMainWindow()
        ui = Ui_Hermit()
        ui.setupUi(hermit_win)
        main_arcans_win.close()
        hermit_win.show()

        # Возврат в главное окно из Отшельника
        def returnToMainWindow():
            hermit_win.close()
            window.show()

        # Возврат к Старшим арканам из Отшельника
        def returnToMainArcans():
            hermit_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_hermit.clicked.connect(openHermit)

    # Открываем Колесо Фортуны
    def openFortune():
        global fortune_win
        fortune_win = QMainWindow()
        ui = Ui_Fortune()
        ui.setupUi(fortune_win)
        main_arcans_win.close()
        fortune_win.show()

        # Возврат в главное окно из Колеса Фортуны
        def returnToMainWindow():
            fortune_win.close()
            window.show()

        # Возврат к Старшим арканам из Колеса Фортуны
        def returnToMainArcans():
            fortune_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_fortune.clicked.connect(openFortune)

    # Открываем Справедливость
    def openJustice():
        global justice_win
        justice_win = QMainWindow()
        ui = Ui_Justice()
        ui.setupUi(justice_win)
        main_arcans_win.close()
        justice_win.show()

        # Возврат в главное окно из Справедливости
        def returnToMainWindow():
            justice_win.close()
            window.show()

        # Возврат к Старшим арканам из Справедливости
        def returnToMainArcans():
            justice_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_justice.clicked.connect(openJustice)

    # Открываем Повешенного
    def openHenged():
        global henged_win
        henged_win = QMainWindow()
        ui = Ui_Henged()
        ui.setupUi(henged_win)
        main_arcans_win.close()
        henged_win.show()

        # Возврат в главное окно из Повешенного
        def returnToMainWindow():
            henged_win.close()
            window.show()

        # Возврат к Старшим арканам из Повешенного
        def returnToMainArcans():
            henged_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_henged.clicked.connect(openHenged)

    # Открываем Смерть
    def openDeath():
        global death_win
        death_win = QMainWindow()
        ui = Ui_Death()
        ui.setupUi(death_win)
        main_arcans_win.close()
        death_win.show()

        # Возврат в главное окно из Смерти
        def returnToMainWindow():
            death_win.close()
            window.show()

        # Возврат к Старшим арканам из Смерти
        def returnToMainArcans():
            death_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_death.clicked.connect(openDeath)

    # Открываем Умеренность
    def openTemperance():
        global temperance_win
        temperance_win = QMainWindow()
        ui = Ui_Temperance()
        ui.setupUi(temperance_win)
        main_arcans_win.close()
        temperance_win.show()

        # Возврат в главное окно из Умеренности
        def returnToMainWindow():
            temperance_win.close()
            window.show()

        # Возврат к Старшим арканам из Умеренности
        def returnToMainArcans():
            temperance_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_temperance.clicked.connect(openTemperance)

    # Открываем Дьявола
    def openDevil():
        global devil_win
        devil_win = QMainWindow()
        ui = Ui_Devil()
        ui.setupUi(devil_win)
        main_arcans_win.close()
        devil_win.show()

        # Возврат в главное окно из Дьявола
        def returnToMainWindow():
            devil_win.close()
            window.show()

        # Возврат к Старшим арканам из Дьявола
        def returnToMainArcans():
            devil_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_devil.clicked.connect(openDevil)

    # Открываем Башню
    def openTower():
        global tower_win
        tower_win = QMainWindow()
        ui = Ui_Tower()
        ui.setupUi(tower_win)
        main_arcans_win.close()
        tower_win.show()

        # Возврат в главное окно из Башни
        def returnToMainWindow():
            tower_win.close()
            window.show()

        # Возврат к Старшим арканам из Башни
        def returnToMainArcans():
            tower_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_tower.clicked.connect(openTower)

    # Открываем Звезду
    def openStar():
        global star_win
        star_win = QMainWindow()
        ui = Ui_Star()
        ui.setupUi(star_win)
        main_arcans_win.close()
        star_win.show()

        # Возврат в главное окно из Звезды
        def returnToMainWindow():
            star_win.close()
            window.show()

        # Возврат к Старшим арканам из Звезды
        def returnToMainArcans():
            star_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_star.clicked.connect(openStar)

    # Открываем Луну
    def openMoon():
        global moon_win
        moon_win = QMainWindow()
        ui = Ui_Moon()
        ui.setupUi(moon_win)
        main_arcans_win.close()
        moon_win.show()

        # Возврат в главное окно из Луны
        def returnToMainWindow():
            moon_win.close()
            window.show()

        # Возврат к Старшим арканам из Луны
        def returnToMainArcans():
            moon_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_moon.clicked.connect(openMoon)

    # Открываем Солнце
    def openSun():
        global sun_win
        sun_win = QMainWindow()
        ui = Ui_Sun()
        ui.setupUi(sun_win)
        main_arcans_win.close()
        sun_win.show()

        # Возврат в главное окно из Солнца
        def returnToMainWindow():
            sun_win.close()
            window.show()

        # Возврат к Старшим арканам из Солнца
        def returnToMainArcans():
            sun_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_sun.clicked.connect(openSun)

    # Открываем Справедливость
    def openJudgement():
        global judgement_win
        judgement_win = QMainWindow()
        ui = Ui_Judgement()
        ui.setupUi(judgement_win)
        main_arcans_win.close()
        judgement_win.show()

        # Возврат в главное окно из Справедливости
        def returnToMainWindow():
            judgement_win.close()
            window.show()

        # Возврат к Старшим арканам из Справедливости
        def returnToMainArcans():
            judgement_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_judgement.clicked.connect(openJudgement)

    # Открываем Мир
    def openWorld():
        global world_win
        world_win = QMainWindow()
        ui = Ui_World()
        ui.setupUi(world_win)
        main_arcans_win.close()
        world_win.show()

        # Возврат в главное окно из Мира
        def returnToMainWindow():
            world_win.close()
            window.show()

        # Возврат к Старшим арканам из Мира
        def returnToMainArcans():
            world_win.close()
            main_arcans_win.show()
        ui.button_back_to_main_arcans.clicked.connect(returnToMainArcans)
        ui.button_back_to_menu.clicked.connect(returnToMainWindow)
    ui.button_world.clicked.connect(openWorld)


ui.button_main_arcans.clicked.connect(openMainArcansWindow)

try:
    sys.exit(app.exec())
except:
    print('Exiting')
